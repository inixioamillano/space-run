{"version":3,"sources":["systems.js","entities/Rocket.js","entities/Score.js","entities/Asteroid.js","App.js","serviceWorker.js","index.js"],"names":["MoveRocket","entities","payload","input","find","x","name","rocket","pageX","MoveMobileRocket","newLocation","touches","window","innerWidth","MoveAsteroid","asteroid","score","y","innerHeight","Math","random","aLeft","aRight","rocketLeft","rocketRight","abs","lives","gameOver","speed","Rocket","props","size","onTouchStart","e","console","log","clientX","style","position","height","bottom","left","alt","src","image","Score","getShieldStyle","shield","marginLeft","marginRight","fontSize","color","className","textAlign","top","width","zIndex","background","Asteroid","this","PureComponent","ships","tardis","speeds","easy","medium","hard","getHighestScores","a","get","getStoredShip","SimpleGame","useState","running","setRunning","mode","setMode","lastScore","setLastScore","ship","setShip","then","backgroundColor","systems","isMobile","target","renderer","highestScores","set","onClick","newShip","newMode","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.bdc03e6a.chunk.js","sourcesContent":["const MoveRocket = (entities, { input }) => {\r\n    \r\n    let { payload } = input.find(x => x.name === \"onMouseMove\") || {};\r\n    const rocket = entities[\"rocket\"];\r\n    if (payload) {\r\n      rocket.x = payload.pageX;\r\n    }\r\n    return entities;\r\n};\r\n\r\nconst MoveMobileRocket = (entities, { input }) => {\r\n    \r\n    let { payload } = input.find(x => x.name === \"onTouchMove\") || {};\r\n    const rocket = entities[\"rocket\"];\r\n    if (payload) {\r\n        const newLocation = payload.touches[0].pageX;\r\n        if (newLocation < window.innerWidth && newLocation > 53){\r\n            rocket.x = newLocation\r\n        }\r\n    }\r\n    \r\n    return entities;\r\n};\r\n\r\nconst MoveAsteroid = (entities, { input }) => {\r\n    if (entities) {\r\n        const asteroid = entities[\"asteroid\"];\r\n        const score = entities[\"score\"];\r\n        const rocket = entities.rocket\r\n        if (asteroid.y < 100){\r\n            asteroid.y = window.innerHeight - 100;\r\n            asteroid.x = Math.random()*(window.innerWidth - 101);\r\n            if (score) {\r\n                score.score = score.score+50;\r\n            }\r\n        }\r\n        const aLeft = asteroid.x;\r\n        const aRight = aLeft + 100\r\n        const rocketLeft = rocket.x;\r\n        const rocketRight = rocketLeft + 53.09;\r\n        var overlap = (Math.abs(asteroid.y - rocket.y) < 100 &&  ((rocketLeft > aLeft && rocketLeft < aRight) || (rocketRight > aLeft && rocketRight < aRight)))\r\n        if (overlap){\r\n            score.lives = score.lives-1;\r\n            asteroid.y = window.innerHeight - 100;\r\n            asteroid.x = Math.random()*(window.innerWidth-101);\r\n            if (score.lives < 0){\r\n                score.gameOver(score.score)\r\n                score.score = 0\r\n            }\r\n        }\r\n        asteroid.y = asteroid.y - asteroid.speed;\r\n    }\r\n    return entities\r\n    \r\n}\r\nexport { MoveRocket, MoveAsteroid, MoveMobileRocket };","import React from \"react\";\r\n \r\nfunction Rocket(props) {\r\n    const size = 100;\r\n    const x = props.x - size / 2;\r\n    const y = 15\r\n    return (\r\n        <div onTouchStart={e => console.log(e.touches[0].clientX)}>\r\n            <img style={{ position: \"absolute\", height: size, bottom: y, left: x }} alt=\"rocket\" src={props.image}/>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport { Rocket };","import React from 'react'\r\nimport 'font-awesome/css/font-awesome.min.css';\r\n\r\nexport default function Score(props) {\r\n    const getShieldStyle = (shield) => {\r\n        return {\r\n            marginLeft: 2,\r\n            marginRight: 2,\r\n            fontSize: 20,\r\n            color: shield > props.lives ? \"#B3000C\" : \"#00B32C\"\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"space\" style={{textAlign: \"center\", position: \"absolute\", top: 0, left: 0, width: \"100%\", height: 50, zIndex: 10, color: \"white\", background: \"linear-gradient(to right top, #052337, #273162, #6c327a, #b51a72, #eb124b)\"}}>\r\n                Score: {props.score}\r\n                <br />\r\n                <i className=\"fa fa-shield\" style={getShieldStyle(1)}></i>\r\n                <i className=\"fa fa-shield\" style={getShieldStyle(2)}></i>\r\n                <i className=\"fa fa-shield\" style={getShieldStyle(3)}></i>\r\n        </div>\r\n    )\r\n}\r\n","import React, {PureComponent} from 'react'\r\n\r\nexport class Asteroid extends PureComponent {\r\n    render(){\r\n    const size = 100;\r\n    const x = this.props.x - size / 2;\r\n    const y = this.props.y - size / 2;\r\n    return (\r\n        <div style={{}}>\r\n            <img style={{ position: \"absolute\", height: size, bottom: y, left: x }} alt=\"asteroid\" src=\"asteroid.png\"/>\r\n        </div>\r\n        \r\n    )\r\n    }\r\n}\r\n","import React, { useState } from \"react\";\nimport { GameEngine } from \"react-game-engine\";\nimport { MoveAsteroid, MoveMobileRocket, MoveRocket } from \"./systems\"\nimport {Rocket} from \"./entities/Rocket\";\nimport Score from './entities/Score'\nimport StarfieldAnimation from 'react-starfield-animation'\nimport { Asteroid } from \"./entities/Asteroid\";\nimport {isMobile} from 'react-device-detect';\nimport {get, set} from 'idb-keyval'\nimport 'font-awesome/css/font-awesome.min.css';\nconst ships = {\n  rocket: \"rocket.png\",\n  tardis: \"tardis.png\"\n}\n\nconst speeds = {\n  easy: 10,\n  medium: 15,\n  hard: 20\n}\n\nconst getHighestScores = async () => {\n return await get(\"highest-scores\")\n}\n\nconst getStoredShip = async () => {\n  return await get(\"ship\")\n}\n\nexport default function SimpleGame(props) {\n    const [running, setRunning] = useState(false);\n    const [mode, setMode] = useState(\"medium\");\n    const [lastScore, setLastScore] = useState();\n    const [ship, setShip] = useState(\"rocket\")\n    getStoredShip().then(ship => setShip(ship || \"rocket\"))\n    if (running) {\n      return (\n        <div>\n        <GameEngine\n          running={running}\n          style={{ width: \"100%\", height: \"100vh\", backgroundColor: \"black\" }}\n          systems={[MoveAsteroid, isMobile ?  MoveMobileRocket : MoveRocket]}\n          entities={{\n            rocket: {image: ships[ship], x: window.innerWidth / 2, y: 15, target: window.innerWidth / 2, renderer: <Rocket/>},\n            asteroid: {x: 15, y: window.innerHeight - 100, speed: speeds[mode], renderer: <Asteroid/>},\n            score: {score: 0, lives: 3, gameOver: async (score) => {\n              setLastScore(score)\n              getHighestScores(highestScores => {\n                if (!highestScores[mode]){\n                  highestScores[mode] = score\n                  set('highest-scores', highestScores);\n                } else if (score > highestScores[mode]) {\n                  highestScores[mode] = score\n                  set('highest-scores', highestScores);\n                }\n              })\n              setRunning(false)\n            }, renderer: <Score/>},\n          }}>\n            <div>\n            <StarfieldAnimation\n              style={{\n                position: 'absolute',\n                width: '100%',\n                height: '100%'\n              }}\n            />\n            </div>\n        </GameEngine>           \n      </div>)\n    } else {\n      return <div className=\"space menu\"> \n            <div className=\"menu-title\">\n              SPACE RUN\n            </div>\n            {lastScore ? <div className=\"menu-score sm\">Score: {lastScore}</div>: <div />}\n            <div className=\"menu-item\" onClick={() => {setRunning(true)}}>\n              {lastScore ? \"REPLAY\" : \"PLAY\"}\n            </div>\n            <div className=\"sm menu-selector\">\n              Ship\n              <br/>\n              <div className=\"menu-selector-item menu-item menu-arrow\" onClick={() => {\n                const newShip = ship === \"rocket\" ? \"tardis\" : \"rocket\"\n                setShip(newShip)\n                set(\"ship\", newShip)\n              }}>\n                <i className=\"fa fa-arrow-circle-left\"/>\n              </div>\n              <div className=\"menu-selector-item menu-item menu-selector-label\">\n                <img style={{height: 23, marginRight: 10}} src={\"/\"+ships[ship]} alt=\"ship menu\"></img>\n                {ship}\n              </div>\n              <div className=\"menu-selector-item menu-item menu-arrow\" onClick={() => {\n                const newShip = ship === \"rocket\" ? \"tardis\" : \"rocket\"\n                setShip(newShip)\n                set(\"ship\", newShip)\n              }}>\n                <i className=\"fa fa-arrow-circle-right\"/>\n              </div>\n            </div>\n\n            <div className=\"sm menu-selector\">\n              Mode\n              <br/>\n              <div className=\"menu-selector-item menu-item menu-arrow\" onClick={() => {\n                let newMode = \"\";\n                switch(mode){\n                  case \"easy\":\n                    newMode = \"hard\"\n                    break;\n                  case \"medium\":\n                    newMode = \"easy\";\n                    break;\n                  default:\n                    newMode = \"medium\";\n                    break;\n                }\n                setMode(newMode)\n              }}>\n                <i className=\"fa fa-arrow-circle-left\"/>\n              </div>\n              <div className=\"menu-selector-item menu-item menu-selector-label\">\n                {mode}\n              </div>\n              <div className=\"menu-selector-item menu-item menu-arrow\" onClick={() => {\n                let newMode = \"\";\n                switch(mode){\n                  case \"easy\":\n                    newMode = \"medium\"\n                    break;\n                  case \"medium\":\n                    newMode = \"hard\";\n                    break;\n                  default:\n                    newMode = \"easy\";\n                    break;\n                }\n                setMode(newMode)\n              }}>\n                <i className=\"fa fa-arrow-circle-right\"/>\n              </div>\n            </div>\n\n      </div>\n    };  \n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\nimport './index.css'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.register();\n"],"sourceRoot":""}