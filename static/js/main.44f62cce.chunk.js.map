{"version":3,"sources":["systems.js","entities/Rocket.js","entities/Score.js","entities/Asteroid.js","App.js","serviceWorker.js","index.js"],"names":["MoveRocket","entities","payload","input","find","x","name","rocket","pageX","MoveMobileRocket","newLocation","touches","window","innerWidth","MoveAsteroid","asteroid","score","y","innerHeight","Math","random","speed","aLeft","aRight","rocketLeft","rocketRight","abs","lives","gameOver","Rocket","props","size","onTouchStart","e","console","log","clientX","style","position","height","bottom","left","alt","src","Score","getShieldStyle","shield","marginLeft","marginRight","fontSize","color","className","textAlign","top","width","zIndex","background","Asteroid","this","PureComponent","SimpleGame","useState","running","setRunning","lastScore","setLastScore","backgroundColor","systems","isMobile","target","renderer","marginTop","marginBottom","onClick","textAllign","margin","borderRadius","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.44f62cce.chunk.js","sourcesContent":["const MoveRocket = (entities, { input }) => {\r\n    \r\n    let { payload } = input.find(x => x.name === \"onMouseMove\") || {};\r\n    const rocket = entities[\"rocket\"];\r\n    if (payload) {\r\n      rocket.x = payload.pageX;\r\n    }\r\n    return entities;\r\n};\r\n\r\nconst MoveMobileRocket = (entities, { input }) => {\r\n    \r\n    let { payload } = input.find(x => x.name === \"onTouchMove\") || {};\r\n    const rocket = entities[\"rocket\"];\r\n    if (payload) {\r\n        const newLocation = payload.touches[0].pageX;\r\n        if (newLocation < window.innerWidth && newLocation > 53){\r\n            rocket.x = newLocation\r\n        }\r\n    }\r\n    \r\n    return entities;\r\n};\r\n\r\nconst MoveAsteroid = (entities, { input }) => {\r\n    if (entities) {\r\n        const asteroid = entities[\"asteroid\"];\r\n        const score = entities[\"score\"];\r\n        const rocket = entities.rocket\r\n        if (asteroid.y < 100){\r\n            asteroid.y = window.innerHeight - 100;\r\n            asteroid.x = Math.random()*(window.innerWidth - 101);\r\n            asteroid.speed = 10 + Math.random()*5\r\n            if (score) {\r\n                score.score = score.score+50;\r\n            }\r\n        }\r\n        const aLeft = asteroid.x;\r\n        const aRight = aLeft + 100\r\n        const rocketLeft = rocket.x;\r\n        const rocketRight = rocketLeft + 53.09;\r\n        var overlap = (Math.abs(asteroid.y - rocket.y) < 100 &&  ((rocketLeft > aLeft && rocketLeft < aRight) || (rocketRight > aLeft && rocketRight < aRight)))\r\n        if (overlap){\r\n            score.lives = score.lives-1;\r\n            asteroid.y = window.innerHeight - 100;\r\n            asteroid.x = Math.random()*(window.innerWidth-101);\r\n            asteroid.speed = 10 + Math.random()*5\r\n            if (score.lives === 0){\r\n                score.gameOver(score.score)\r\n                score.score = 0\r\n            }\r\n        }\r\n        asteroid.y = asteroid.y - asteroid.speed;\r\n    }\r\n    return entities\r\n    \r\n}\r\nexport { MoveRocket, MoveAsteroid, MoveMobileRocket };","import React from \"react\";\r\n \r\nfunction Rocket(props) {\r\n    const size = 100;\r\n    const x = props.x - size / 2;\r\n    const y = 15\r\n    return (\r\n        <div onTouchStart={e => console.log(e.touches[0].clientX)}>\r\n            <img style={{ position: \"absolute\", height: size, bottom: y, left: x }} alt=\"rocket\" src=\"rocket.png\"/>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport { Rocket };","import React from 'react'\r\nimport 'font-awesome/css/font-awesome.min.css';\r\n\r\nexport default function Score(props) {\r\n    const getShieldStyle = (shield) => {\r\n        return {\r\n            marginLeft: 2,\r\n            marginRight: 2,\r\n            fontSize: 20,\r\n            color: shield > props.lives ? \"#B3000C\" : \"#00B32C\"\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"space\" style={{textAlign: \"center\", position: \"absolute\", top: 0, left: 0, width: \"100%\", height: 50, zIndex: 10, color: \"white\", background: \"linear-gradient(to right top, #052337, #273162, #6c327a, #b51a72, #eb124b)\"}}>\r\n                Score: {props.score}\r\n                <br />\r\n                <i className=\"fa fa-shield\" style={getShieldStyle(1)}></i>\r\n                <i className=\"fa fa-shield\" style={getShieldStyle(2)}></i>\r\n                <i className=\"fa fa-shield\" style={getShieldStyle(3)}></i>\r\n                <i className=\"fa fa-shield\" style={getShieldStyle(4)}></i>\r\n                <i className=\"fa fa-shield\" style={getShieldStyle(5)}></i>\r\n        </div>\r\n    )\r\n}\r\n","import React, {PureComponent} from 'react'\r\n\r\nexport class Asteroid extends PureComponent {\r\n    render(){\r\n    const size = 100;\r\n    const x = this.props.x - size / 2;\r\n    const y = this.props.y - size / 2;\r\n    return (\r\n        <div style={{}}>\r\n            <img style={{ position: \"absolute\", height: size, bottom: y, left: x }} alt=\"asteroid\" src=\"asteroid.png\"/>\r\n        </div>\r\n        \r\n    )\r\n    }\r\n}\r\n","import React, { useState } from \"react\";\nimport { GameEngine } from \"react-game-engine\";\nimport { MoveAsteroid, MoveMobileRocket, MoveRocket } from \"./systems\"\nimport {Rocket} from \"./entities/Rocket\";\nimport Score from './entities/Score'\nimport StarfieldAnimation from 'react-starfield-animation'\nimport { Asteroid } from \"./entities/Asteroid\";\nimport {isMobile} from 'react-device-detect'\nexport default function SimpleGame(props) {\n    const [running, setRunning] = useState(false);\n    const [lastScore, setLastScore] = useState();\n    if (running) {\n      return (\n        <div>\n        <GameEngine\n          running={running}\n          style={{ width: \"100%\", height: \"100vh\", backgroundColor: \"black\" }}\n          systems={[MoveAsteroid, isMobile ?  MoveMobileRocket : MoveRocket]}\n          entities={{\n            rocket: {x: window.innerWidth / 2, y: 15, target: window.innerWidth / 2, renderer: <Rocket/>},\n            asteroid: {x: 15, y: window.innerHeight - 100, speed: 15, renderer: <Asteroid/>},\n            score: {score: 0, lives: 5, gameOver: (score) => {\n              setLastScore(score)\n              setRunning(false)\n            }, renderer: <Score/>},\n          }}>\n            <div>\n            <StarfieldAnimation\n              style={{\n                position: 'absolute',\n                width: '100%',\n                height: '100%'\n              }}\n            />\n            </div>\n        </GameEngine>           \n      </div>)\n    } else {\n      return <div className=\"space\" style={{fontSize: 50, position: \"absolute\", width: \"100%\", height: \"100vh\", backgroundColor: \"black\"}}> \n            <div style={{color: \"white\", textAlign: \"center\", marginTop: 50, marginBottom: 50}}>\n              SPACE RUN\n            </div>\n            {lastScore? <div style={{color: \"white\", marginBottom: 20, fontSize: 25, textAlign: \"center\"}}>Score: {lastScore}</div>: <div />}\n            <div style={{textAlign: \"center\"}}>\n              <div onClick={() => {setRunning(true)}} style={{color: \"white\", textAllign: \"center\", margin: \"0 auto\", borderRadius: 40, background: \"linear-gradient(to right top, #052337, #273162, #6c327a, #b51a72, #eb124b)\", width: \"90%\", height: \"30%\"}}>\n                {lastScore ? \"REPLAY\" : \"PLAY\"}\n              </div>\n            </div>\n      </div>\n    };  \n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\nimport './index.css'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.register();\n"],"sourceRoot":""}